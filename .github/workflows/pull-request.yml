name: Pull Request

on:
  pull_request:
  push:
    branches: [master]

env:
  SOLANA_VERSION: v1.4.4

jobs:
  all_github_action_checks:
    runs-on: ubuntu-latest
    needs:
      - clippy
      - list_bpf_programs
      - cargo_test
      - js_token
      - js_token_swap
      - js_token_lending
      - build_bpf_programs
      - excluded_project_tests
    steps:
      - run: echo "Done"
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: rustfmt

      - name: Run fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal
          components: clippy

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-clippy-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-clippy-

      - name: Install dependencies
        run: ./ci/install-deps.sh

      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -Zunstable-options --workspace --all-targets -- --deny=warnings

  build_test:
    runs-on: ubuntu-latest
    env:
      SOLANA_VERSION: v1.4.4
      RUST_VERSION: 1.47.0 # MSRV
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true
          profile: minimal

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-build-

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/rustfilt
          key: cargo-bpf-bins-${{ runner.os }}
          restore-keys: |
            cargo-bpf-bins-${{ runner.os }}-

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache
          key: solana-${{ env.SOLANA_VERSION }}
          restore-keys: |
            solana-

      - name: Install dependencies
        run: |
          ./ci/install-deps.sh
          ./ci/install-program-deps.sh
          echo "PATH=/home/runner/.local/share/solana/install/active_release/bin:$PATH" >> $GITHUB_ENV

      - name: Build and test
        run: ./ci/build_test_script.sh

      - name: Upload programs
        uses: actions/upload-artifact@v2
        with:
          name: programs
          path: "*.so"
          if-no-files-found: error

  js_token:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: 12.x
    defaults:
      run:
        working-directory: token/js
    needs: build_test
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: node-token-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node-token-
      - name: Download programs
        uses: actions/download-artifact@v2
        with:
          name: programs
          path: target/bpfel-unknown-unknown/release
      - run: ../../ci/js_token_script.sh

  js_token_swap:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: 12.x
    defaults:
      run:
        working-directory: token-swap/js
    needs: build_test
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: node-token-swap-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node-token-swap
      - name: Download programs
        uses: actions/download-artifact@v2
        with:
          name: programs
          path: target/bpfel-unknown-unknown/release
      - run: ../../ci/js_token_swap_script.sh

  js_token_lending:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: 12.x
    defaults:
      run:
        working-directory: token-lending/js
    needs: build_test
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: node-token-lending-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node-token-lending-
      - name: Download programs
        uses: actions/download-artifact@v2
        with:
          name: programs
          path: target/bpfel-unknown-unknown/release
      - run: ../../ci/js_token_lending_script.sh
